"""Add prescription, inventory, and patient portal features

Revision ID: 4b5e7dad69d9
Revises: 20251021_add_schedule_table
Create Date: 2025-10-26 11:07:34.804672

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4b5e7dad69d9'
down_revision = '20251021_add_schedule_table'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drug_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_a', sa.String(), nullable=False),
    sa.Column('drug_b', sa.String(), nullable=False),
    sa.Column('severity', sa.Enum('minor', 'moderate', 'major', 'severe', name='interaction_severity'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('recommendation', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drug_interactions_drug_a'), 'drug_interactions', ['drug_a'], unique=False)
    op.create_index(op.f('ix_drug_interactions_drug_b'), 'drug_interactions', ['drug_b'], unique=False)
    op.create_index(op.f('ix_drug_interactions_id'), 'drug_interactions', ['id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'staff', 'patient', name='user_role'), nullable=True),
    sa.Column('resource', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('allowed', sa.Boolean(), nullable=True),
    sa.Column('conditions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_role_permissions_action'), 'role_permissions', ['action'], unique=False)
    op.create_index(op.f('ix_role_permissions_id'), 'role_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_role_permissions_resource'), 'role_permissions', ['resource'], unique=False)
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('contact_person', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_suppliers_id'), 'suppliers', ['id'], unique=False)
    op.create_index(op.f('ix_suppliers_name'), 'suppliers', ['name'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('resource_type', sa.String(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('old_values', sa.Text(), nullable=True),
    sa.Column('new_values', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_table('inventory_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('item_code', sa.String(), nullable=False),
    sa.Column('category', sa.Enum('medication', 'equipment', 'supplies', 'other', name='inventory_category'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit_of_measure', sa.String(), nullable=False),
    sa.Column('current_stock', sa.Integer(), nullable=True),
    sa.Column('minimum_stock', sa.Integer(), nullable=True),
    sa.Column('maximum_stock', sa.Integer(), nullable=True),
    sa.Column('reorder_point', sa.Integer(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_restocked', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_items_id'), 'inventory_items', ['id'], unique=False)
    op.create_index(op.f('ix_inventory_items_item_code'), 'inventory_items', ['item_code'], unique=True)
    op.create_index(op.f('ix_inventory_items_item_name'), 'inventory_items', ['item_name'], unique=False)
    op.create_table('lab_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('test_name', sa.String(), nullable=False),
    sa.Column('test_category', sa.String(), nullable=True),
    sa.Column('result_value', sa.String(), nullable=True),
    sa.Column('normal_range', sa.String(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'cancelled', name='lab_status'), nullable=True),
    sa.Column('abnormal_flag', sa.Boolean(), nullable=True),
    sa.Column('ordered_by', sa.Integer(), nullable=True),
    sa.Column('performed_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('test_date', sa.DateTime(), nullable=True),
    sa.Column('result_date', sa.DateTime(), nullable=True),
    sa.Column('is_patient_visible', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ordered_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lab_results_id'), 'lab_results', ['id'], unique=False)
    op.create_table('patient_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.Enum('lab_result', 'imaging', 'prescription', 'discharge_summary', 'consent_form', 'insurance', 'other', name='document_type'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('is_patient_visible', sa.Boolean(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_documents_id'), 'patient_documents', ['id'], unique=False)
    op.create_table('patient_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('message_type', sa.Enum('general', 'appointment', 'prescription', 'billing', 'emergency', name='message_type'), nullable=True),
    sa.Column('priority', sa.Enum('low', 'normal', 'high', 'urgent', name='message_priority'), nullable=True),
    sa.Column('status', sa.Enum('unread', 'read', 'replied', 'closed', name='message_status'), nullable=True),
    sa.Column('is_patient_sender', sa.Boolean(), nullable=True),
    sa.Column('parent_message_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_message_id'], ['patient_messages.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_messages_id'), 'patient_messages', ['id'], unique=False)
    op.create_table('patient_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('notification_email', sa.Boolean(), nullable=True),
    sa.Column('notification_sms', sa.Boolean(), nullable=True),
    sa.Column('notification_push', sa.Boolean(), nullable=True),
    sa.Column('appointment_reminder_days', sa.Integer(), nullable=True),
    sa.Column('preferred_language', sa.String(), nullable=True),
    sa.Column('preferred_communication', sa.Enum('email', 'sms', 'phone', 'portal', name='communication_method'), nullable=True),
    sa.Column('share_medical_history', sa.Boolean(), nullable=True),
    sa.Column('allow_marketing', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_index(op.f('ix_patient_preferences_id'), 'patient_preferences', ['id'], unique=False)
    op.create_table('purchase_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('po_number', sa.String(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('expected_delivery', sa.DateTime(), nullable=True),
    sa.Column('actual_delivery', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('draft', 'pending', 'approved', 'ordered', 'received', 'cancelled', name='po_status'), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('tax_amount', sa.Float(), nullable=True),
    sa.Column('shipping_cost', sa.Float(), nullable=True),
    sa.Column('grand_total', sa.Float(), nullable=True),
    sa.Column('ordered_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ordered_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_purchase_orders_id'), 'purchase_orders', ['id'], unique=False)
    op.create_index(op.f('ix_purchase_orders_po_number'), 'purchase_orders', ['po_number'], unique=True)
    op.create_table('staff_communications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('message_type', sa.Enum('direct', 'broadcast', 'announcement', 'alert', 'task', name='message_type'), nullable=True),
    sa.Column('priority', sa.Enum('low', 'normal', 'high', 'urgent', name='message_priority'), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('department_filter', sa.String(), nullable=True),
    sa.Column('role_filter', sa.String(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_communications_id'), 'staff_communications', ['id'], unique=False)
    op.create_table('staff_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('patients_served', sa.Integer(), nullable=True),
    sa.Column('avg_service_time', sa.Float(), nullable=True),
    sa.Column('patient_satisfaction', sa.Float(), nullable=True),
    sa.Column('efficiency_score', sa.Float(), nullable=True),
    sa.Column('attendance_score', sa.Float(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('total_score', sa.Float(), nullable=True),
    sa.Column('shift_duration', sa.Integer(), nullable=True),
    sa.Column('breaks_taken', sa.Integer(), nullable=True),
    sa.Column('emergency_responses', sa.Integer(), nullable=True),
    sa.Column('feedback_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_performance_date'), 'staff_performance', ['date'], unique=False)
    op.create_index(op.f('ix_staff_performance_id'), 'staff_performance', ['id'], unique=False)
    op.create_table('staff_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('specialization', sa.String(), nullable=True),
    sa.Column('license_number', sa.String(), nullable=True),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('certifications', sa.Text(), nullable=True),
    sa.Column('performance_rating', sa.Float(), nullable=True),
    sa.Column('is_supervisor', sa.Boolean(), nullable=True),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.Column('hire_date', sa.DateTime(), nullable=True),
    sa.Column('contract_type', sa.Enum('full_time', 'part_time', 'contract', 'temporary', name='contract_type'), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=True),
    sa.Column('max_patients_per_hour', sa.Integer(), nullable=True),
    sa.Column('languages_spoken', sa.Text(), nullable=True),
    sa.Column('emergency_certified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['supervisor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_staff_profiles_department'), 'staff_profiles', ['department'], unique=False)
    op.create_index(op.f('ix_staff_profiles_employee_id'), 'staff_profiles', ['employee_id'], unique=True)
    op.create_index(op.f('ix_staff_profiles_id'), 'staff_profiles', ['id'], unique=False)
    op.create_table('staff_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('shift_date', sa.DateTime(), nullable=True),
    sa.Column('shift_type', sa.Enum('morning', 'afternoon', 'night', 'weekend', 'holiday', name='shift_type'), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('break_duration', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('assigned_service_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_schedules_id'), 'staff_schedules', ['id'], unique=False)
    op.create_index(op.f('ix_staff_schedules_shift_date'), 'staff_schedules', ['shift_date'], unique=False)
    op.create_table('staff_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('assigned_by', sa.Integer(), nullable=True),
    sa.Column('task_type', sa.Enum('maintenance', 'training', 'audit', 'emergency_prep', 'quality_check', 'other', name='task_type'), nullable=True),
    sa.Column('priority', sa.Enum('low', 'normal', 'high', 'urgent', name='task_priority'), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'cancelled', 'overdue', name='task_status'), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('estimated_hours', sa.Float(), nullable=True),
    sa.Column('actual_hours', sa.Float(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_tasks_id'), 'staff_tasks', ['id'], unique=False)
    op.create_table('staff_training',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('training_name', sa.String(), nullable=True),
    sa.Column('training_type', sa.Enum('mandatory', 'optional', 'certification', 'skill_development', name='training_type'), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('completion_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('assigned', 'in_progress', 'completed', 'expired', 'failed', name='training_status'), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('certificate_url', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_training_id'), 'staff_training', ['id'], unique=False)
    op.create_table('system_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('setting_key', sa.String(), nullable=True),
    sa.Column('setting_value', sa.Text(), nullable=True),
    sa.Column('setting_type', sa.Enum('string', 'integer', 'float', 'boolean', 'json', name='setting_type'), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_system_setting', sa.Boolean(), nullable=True),
    sa.Column('requires_restart', sa.Boolean(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_settings_category'), 'system_settings', ['category'], unique=False)
    op.create_index(op.f('ix_system_settings_id'), 'system_settings', ['id'], unique=False)
    op.create_index(op.f('ix_system_settings_setting_key'), 'system_settings', ['setting_key'], unique=True)
    op.create_table('uploaded_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.String(length=32), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('safe_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('checksum', sa.String(length=64), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('upload_time', sa.DateTime(), nullable=False),
    sa.Column('upload_ip', sa.String(length=45), nullable=True),
    sa.Column('virus_scanned', sa.Boolean(), nullable=False),
    sa.Column('virus_scan_clean', sa.Boolean(), nullable=False),
    sa.Column('virus_scan_time', sa.DateTime(), nullable=True),
    sa.Column('virus_scanner', sa.String(length=50), nullable=True),
    sa.Column('is_dicom', sa.Boolean(), nullable=False),
    sa.Column('dicom_patient_name', sa.String(length=255), nullable=True),
    sa.Column('dicom_patient_id', sa.String(length=100), nullable=True),
    sa.Column('dicom_study_date', sa.String(length=20), nullable=True),
    sa.Column('dicom_modality', sa.String(length=50), nullable=True),
    sa.Column('dicom_study_description', sa.Text(), nullable=True),
    sa.Column('dicom_series_description', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('deletion_reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uploaded_files_category'), 'uploaded_files', ['category'], unique=False)
    op.create_index(op.f('ix_uploaded_files_file_id'), 'uploaded_files', ['file_id'], unique=True)
    op.create_index(op.f('ix_uploaded_files_id'), 'uploaded_files', ['id'], unique=False)
    op.create_index(op.f('ix_uploaded_files_is_deleted'), 'uploaded_files', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_uploaded_files_patient_id'), 'uploaded_files', ['patient_id'], unique=False)
    op.create_index(op.f('ix_uploaded_files_upload_time'), 'uploaded_files', ['upload_time'], unique=False)
    op.create_index(op.f('ix_uploaded_files_uploaded_by'), 'uploaded_files', ['uploaded_by'], unique=False)
    op.create_table('file_access_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_time', sa.DateTime(), nullable=False),
    sa.Column('access_type', sa.String(length=20), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('failure_reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['uploaded_files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_access_logs_access_time'), 'file_access_logs', ['access_time'], unique=False)
    op.create_index(op.f('ix_file_access_logs_file_id'), 'file_access_logs', ['file_id'], unique=False)
    op.create_index(op.f('ix_file_access_logs_id'), 'file_access_logs', ['id'], unique=False)
    op.create_index(op.f('ix_file_access_logs_user_id'), 'file_access_logs', ['user_id'], unique=False)
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=True),
    sa.Column('prescription_number', sa.String(), nullable=False),
    sa.Column('diagnosis', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('active', 'completed', 'cancelled', 'expired', name='prescription_status'), nullable=True),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('refills_allowed', sa.Integer(), nullable=True),
    sa.Column('refills_remaining', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prescriptions_id'), 'prescriptions', ['id'], unique=False)
    op.create_index(op.f('ix_prescriptions_prescription_number'), 'prescriptions', ['prescription_number'], unique=True)
    op.create_table('purchase_order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity_ordered', sa.Integer(), nullable=False),
    sa.Column('quantity_received', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_purchase_order_items_id'), 'purchase_order_items', ['id'], unique=False)
    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('movement_type', sa.Enum('in', 'out', 'adjustment', 'expired', 'damaged', name='movement_type'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reference_number', sa.String(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('performed_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('movement_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_movements_id'), 'stock_movements', ['id'], unique=False)
    op.create_table('prescription_medications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('medication_name', sa.String(), nullable=False),
    sa.Column('dosage', sa.String(), nullable=False),
    sa.Column('frequency', sa.String(), nullable=False),
    sa.Column('duration', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prescription_medications_id'), 'prescription_medications', ['id'], unique=False)
    op.create_table('prescription_refills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('refill_date', sa.DateTime(), nullable=True),
    sa.Column('dispensed_by', sa.Integer(), nullable=True),
    sa.Column('pharmacy_notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'dispensed', 'rejected', name='refill_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dispensed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prescription_refills_id'), 'prescription_refills', ['id'], unique=False)
    op.add_column('departments', sa.Column('head_id', sa.Integer(), nullable=True))
    op.add_column('departments', sa.Column('parent_department_id', sa.Integer(), nullable=True))
    op.add_column('departments', sa.Column('budget_allocated', sa.Float(), nullable=True))
    op.add_column('departments', sa.Column('staff_count', sa.Integer(), nullable=True))
    op.add_column('departments', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('departments', sa.Column('color_code', sa.String(), nullable=True))
    op.add_column('departments', sa.Column('icon_name', sa.String(), nullable=True))
    op.add_column('departments', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('departments', sa.Column('updated_at', sa.DateTime(), nullable=True))
    # SQLite does not support adding foreign keys to existing tables
    # op.create_foreign_key(None, 'departments', 'users', ['head_id'], ['id'])
    # op.create_foreign_key(None, 'departments', 'departments', ['parent_department_id'], ['id'])
    op.drop_column('departments', 'rooms_count')
    op.drop_column('departments', 'avg_wait_time')
    op.drop_column('departments', 'avg_occupancy_rate')
    op.drop_column('departments', 'typical_tests')
    op.drop_column('departments', 'avg_total_time')
    op.drop_column('departments', 'nurses_count')
    op.drop_column('departments', 'providers_count')
    op.alter_column('users', 'password_hash',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'password_hash',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('departments', sa.Column('providers_count', sa.INTEGER(), nullable=True))
    op.add_column('departments', sa.Column('nurses_count', sa.INTEGER(), nullable=True))
    op.add_column('departments', sa.Column('avg_total_time', sa.FLOAT(), nullable=True))
    op.add_column('departments', sa.Column('typical_tests', sa.TEXT(), nullable=True))
    op.add_column('departments', sa.Column('avg_occupancy_rate', sa.FLOAT(), nullable=True))
    op.add_column('departments', sa.Column('avg_wait_time', sa.FLOAT(), nullable=True))
    op.add_column('departments', sa.Column('rooms_count', sa.INTEGER(), nullable=True))
    op.drop_constraint(None, 'departments', type_='foreignkey')
    op.drop_constraint(None, 'departments', type_='foreignkey')
    op.drop_column('departments', 'updated_at')
    op.drop_column('departments', 'created_at')
    op.drop_column('departments', 'icon_name')
    op.drop_column('departments', 'color_code')
    op.drop_column('departments', 'is_active')
    op.drop_column('departments', 'staff_count')
    op.drop_column('departments', 'budget_allocated')
    op.drop_column('departments', 'parent_department_id')
    op.drop_column('departments', 'head_id')
    op.drop_index(op.f('ix_prescription_refills_id'), table_name='prescription_refills')
    op.drop_table('prescription_refills')
    op.drop_index(op.f('ix_prescription_medications_id'), table_name='prescription_medications')
    op.drop_table('prescription_medications')
    op.drop_index(op.f('ix_stock_movements_id'), table_name='stock_movements')
    op.drop_table('stock_movements')
    op.drop_index(op.f('ix_purchase_order_items_id'), table_name='purchase_order_items')
    op.drop_table('purchase_order_items')
    op.drop_index(op.f('ix_prescriptions_prescription_number'), table_name='prescriptions')
    op.drop_index(op.f('ix_prescriptions_id'), table_name='prescriptions')
    op.drop_table('prescriptions')
    op.drop_index(op.f('ix_file_access_logs_user_id'), table_name='file_access_logs')
    op.drop_index(op.f('ix_file_access_logs_id'), table_name='file_access_logs')
    op.drop_index(op.f('ix_file_access_logs_file_id'), table_name='file_access_logs')
    op.drop_index(op.f('ix_file_access_logs_access_time'), table_name='file_access_logs')
    op.drop_table('file_access_logs')
    op.drop_index(op.f('ix_uploaded_files_uploaded_by'), table_name='uploaded_files')
    op.drop_index(op.f('ix_uploaded_files_upload_time'), table_name='uploaded_files')
    op.drop_index(op.f('ix_uploaded_files_patient_id'), table_name='uploaded_files')
    op.drop_index(op.f('ix_uploaded_files_is_deleted'), table_name='uploaded_files')
    op.drop_index(op.f('ix_uploaded_files_id'), table_name='uploaded_files')
    op.drop_index(op.f('ix_uploaded_files_file_id'), table_name='uploaded_files')
    op.drop_index(op.f('ix_uploaded_files_category'), table_name='uploaded_files')
    op.drop_table('uploaded_files')
    op.drop_index(op.f('ix_system_settings_setting_key'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_id'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_category'), table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_index(op.f('ix_staff_training_id'), table_name='staff_training')
    op.drop_table('staff_training')
    op.drop_index(op.f('ix_staff_tasks_id'), table_name='staff_tasks')
    op.drop_table('staff_tasks')
    op.drop_index(op.f('ix_staff_schedules_shift_date'), table_name='staff_schedules')
    op.drop_index(op.f('ix_staff_schedules_id'), table_name='staff_schedules')
    op.drop_table('staff_schedules')
    op.drop_index(op.f('ix_staff_profiles_id'), table_name='staff_profiles')
    op.drop_index(op.f('ix_staff_profiles_employee_id'), table_name='staff_profiles')
    op.drop_index(op.f('ix_staff_profiles_department'), table_name='staff_profiles')
    op.drop_table('staff_profiles')
    op.drop_index(op.f('ix_staff_performance_id'), table_name='staff_performance')
    op.drop_index(op.f('ix_staff_performance_date'), table_name='staff_performance')
    op.drop_table('staff_performance')
    op.drop_index(op.f('ix_staff_communications_id'), table_name='staff_communications')
    op.drop_table('staff_communications')
    op.drop_index(op.f('ix_purchase_orders_po_number'), table_name='purchase_orders')
    op.drop_index(op.f('ix_purchase_orders_id'), table_name='purchase_orders')
    op.drop_table('purchase_orders')
    op.drop_index(op.f('ix_patient_preferences_id'), table_name='patient_preferences')
    op.drop_table('patient_preferences')
    op.drop_index(op.f('ix_patient_messages_id'), table_name='patient_messages')
    op.drop_table('patient_messages')
    op.drop_index(op.f('ix_patient_documents_id'), table_name='patient_documents')
    op.drop_table('patient_documents')
    op.drop_index(op.f('ix_lab_results_id'), table_name='lab_results')
    op.drop_table('lab_results')
    op.drop_index(op.f('ix_inventory_items_item_name'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_item_code'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_id'), table_name='inventory_items')
    op.drop_table('inventory_items')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_suppliers_name'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_id'), table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index(op.f('ix_role_permissions_resource'), table_name='role_permissions')
    op.drop_index(op.f('ix_role_permissions_id'), table_name='role_permissions')
    op.drop_index(op.f('ix_role_permissions_action'), table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_drug_interactions_id'), table_name='drug_interactions')
    op.drop_index(op.f('ix_drug_interactions_drug_b'), table_name='drug_interactions')
    op.drop_index(op.f('ix_drug_interactions_drug_a'), table_name='drug_interactions')
    op.drop_table('drug_interactions')
    # ### end Alembic commands ###
